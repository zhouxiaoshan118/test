<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zte.zudp.modules.sys.menu.dao.MenuDao">

    <cache />

    <resultMap type="com.zte.zudp.modules.sys.menu.entity.Menu" id="menuMap">
        <id column="id" property="id"/>
        <result column="href" property="href"/>
        <result column="target" property="target" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"
                javaType="com.zte.zudp.modules.sys.utils.enums.URLTarget" />
        <result column="actived" property="actived"/>
        <result column="permission" property="permission"/>
        <result column="hide" property="hide"/>
        <result column="tree_name" property="treeName"/>
        <result column="icon" property="icon"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_ids" property="parentIds"/>
        <result column="weight" property="weight"/>
        <result column="create_date" property="createDate" />
        <result column="create_user" property="createUser.id" />
        <result column="update_date" property="updateDate" />
        <result column="update_user" property="updateUser.id" />
        <result column="del" property="del" />
    </resultMap>

    <sql id="menuColumn">
        m.id,
        m.href,
        m.target,
        m.hide,
        m.actived,
        m.permission,
        m.tree_name,
        m.icon,
        m.parent_id,
        m.parent_ids,
        m.weight,
        m.create_date,
        m.create_user,
        m.update_date,
        m.update_user
    </sql>

    <select id="get" resultMap="menuMap" useCache="true">
        SELECT <include refid="menuColumn" />
        FROM sys_menu m
        WHERE m.id = #{id}
    </select>

    <select id="findList" resultMap="menuMap" useCache="false">
        SELECT <include refid="menuColumn" />
        FROM sys_menu m
        WHERE m.del = 0
            <if test="actived != null">
                AND m.actived = #{actived}
            </if>
            <if test="hide != null">
                AND m.hide = #{hide}
            </if>
            <if test="treeName != null and treeName != ''">
                AND m.tree_name LIKE CONCAT('%', #{treeName}, '%')
            </if>
        ORDER BY m.weight
    </select>

    <select id="findAccountMenu" resultMap="menuMap" useCache="false">
        SELECT DISTINCT <include refid="menuColumn"/>
        FROM sys_role_user src
          JOIN sys_role r ON r.id = src.role_id AND r.actived = 1 AND r.del = 0
          LEFT JOIN sys_role_menu srm ON r.id = srm.role_id
          JOIN sys_menu m ON m.id = srm.menu_id AND m.actived = 1 AND m.del = 0 AND m.hide = 0
        WHERE src.user_id = #{userId}
    </select>

    <select id="findRoleMenu" resultMap="menuMap" useCache="false">
        SELECT <include refid="menuColumn" />
        FROM sys_role r
          LEFT JOIN sys_role_menu srm ON srm.role_id = r.id
          LEFT JOIN sys_menu m ON srm.menu_id = m.id
        WHERE m.del = 0 AND r.role LIKE concat(#{menuRole}, '%') AND m.actived = 1 AND m.hide = 0
    </select>

    <select id="findRoleMenuAndHide" resultMap="menuMap" useCache="false">
        SELECT <include refid="menuColumn" />
        FROM sys_role r
          LEFT JOIN sys_role_menu srm ON srm.role_id = r.id
          LEFT JOIN sys_menu m ON srm.menu_id = m.id
        WHERE m.del = 0 AND r.role LIKE concat(#{menuRole}, '%') AND m.actived = 1
    </select>

    <select id="findChildren" resultMap="menuMap" useCache="false">
        SELECT <include refid="menuColumn" />
        FROM sys_menu m
        WHERE m.del = 0 AND m.parent_ids LIKE concat(#{parentIds}, '%')
    </select>

    <insert id="insert" parameterType="com.zte.zudp.modules.sys.menu.entity.Menu">
        INSERT INTO sys_menu (
            id,
            href,
            target,
            actived,
            permission,
            tree_name,
            icon,
            hide,
            parent_id,
            parent_ids,
            weight,
            create_date,
            create_user,
            update_date,
            update_user
        ) VALUES (
            #{id},
            #{href},
           <!--  #{target, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler, javaType=com.zte.sbom.modules.sys.utils.enums.URLTarget} -->0,
            #{actived},
            #{permission},
            #{treeName},
            #{icon},
            #{hide},
            #{parentId},
            #{parentIds},
            #{weight},
            #{createDate},
            #{createUser.id},
            #{updateDate},
            #{updateUser.id}
        )
    </insert>

    <update id="update" parameterType="com.zte.zudp.modules.sys.menu.entity.Menu">
        UPDATE sys_menu m SET
            m.href = #{href},
          <!--   m.target = #{target, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler, javaType=com.zte.sbom.modules.sys.utils.enums.URLTarget}, -->
            m.actived = #{actived},
            m.permission = #{permission},
            m.tree_name = #{treeName},
            m.icon = #{icon},
            m.hide = #{hide},
            m.parent_id = #{parentId},
            m.parent_ids = #{parentIds},
            m.weight = #{weight},
            m.update_user = #{updateUser.id},
            m.update_date = #{updateDate}
        WHERE m.id = #{id}
    </update>

    <update id="updateChildren">
        <foreach collection="list" item="menu" index="index" open="" close="" separator=";">
            UPDATE sys_menu m SET
                m.parent_ids = replace(parent_ids,#{menu.parentId},#{menu.parentIds}),
                m.update_user = #{menu.updateUser.id},
                m.update_date = #{menu.updateDate}
            WHERE m.id = #{menu.id}
        </foreach>
    </update>

    <delete id="delete">
        UPDATE sys_menu
            SET del = 1
        WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        UPDATE sys_menu SET
          del = 1
        WHERE id IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="delChilds">
    UPDATE sys_menu SET del = 1 WHERE id in (
    	select t.id  from ( SELECT m.id FROM sys_menu m  WHERE m.del = 0  AND parent_ids LIKE concat('%' ,#{id}, '%') OR m.id = #{id}) t 
    )
    </delete>
</mapper>